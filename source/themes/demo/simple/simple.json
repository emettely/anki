{
  "★ Title": "What will each <code>residents[<b>‘key’</b>]</code> print out?",


  "☆ Subtitle": "Dictionaries",


  "☆ Syntax (inline code)": "d = {<b>‘key’</b>: <i>value</i>}",


  "★ Sample (code block)": "<div class=\"sourceCode\" id=\"cb1\"><pre\r\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"><\/a>residents <span class=\"op\">=<\/span> {<span class=\"st\">&#39;Puffin&#39;<\/span> : <span class=\"dv\">104<\/span>, <span class=\"st\">&#39;Sloth&#39;<\/span> : <span class=\"dv\">105<\/span>, <span class=\"st\">&#39;Burmese Python&#39;<\/span> : <span class=\"dv\">106<\/span>}<\/span>\r\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><\/span>\r\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"bu\">print<\/span>(residents[<span class=\"st\">&#39;Puffin&#39;<\/span>])<\/span>\r\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"bu\">print<\/span>(residents[<span class=\"st\">&#39;Sloth&#39;<\/span>])<\/span>\r\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"bu\">print<\/span>(residents[<span class=\"st\">&#39;Burmese Python&#39;<\/span>])<\/span><\/code><\/pre><\/div>",


  "★ Key point (code block)": "<div class=\"sourceCode\" id=\"cb1\"><pre\r\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"dv\">104<\/span><\/span>\r\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"dv\">105<\/span><\/span>\r\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"dv\">106<\/span><\/span><\/code><\/pre><\/div>",


  "★ Key point notes": "<p>Access a <strong>dictionary</strong> item with it's <code>key</code>, which returns it's <code>value</code>. You can also change a value, or generate a brand new value with the following syntax:</p><div class=\"sourceCode\" id=\"cb1\"><pre\r\nclass=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"><\/a>residents <span class=\"op\">=<\/span> {<span class=\"st\">&#39;Puffin&#39;<\/span>: <span class=\"dv\">104<\/span>, <span class=\"st\">&#39;Sloth&#39;<\/span>: <span class=\"dv\">105<\/span>, <span class=\"st\">&#39;Burmese Python&#39;<\/span>: <span class=\"dv\">106<\/span>}<\/span>\r\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"><\/a>residents[<span class=\"st\">&#39;Burmese Python&#39;<\/span>] <span class=\"op\">=<\/span> <span class=\"dv\">98<\/span><span class=\"op\">;<\/span> <span class=\"co\"># update existing entry<\/span><\/span>\r\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"><\/a>residents[<span class=\"st\">&#39;Puffin&#39;<\/span>] <span class=\"op\">=<\/span> <span class=\"dv\">36<\/span><span class=\"op\">;<\/span> <span class=\"co\"># Add new entry<\/span><\/span>\r\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><\/span>\r\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"bu\">print<\/span> <span class=\"st\">&quot;residents[&#39;Burmese Python&#39;]: &quot;<\/span>, residents[<span class=\"st\">&#39;Burmese Python&#39;<\/span>]<\/span>\r\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"><\/a><span class=\"bu\">print<\/span> <span class=\"st\">&quot;residents[&#39;Puffin&#39;]: &quot;<\/span>, residents[<span class=\"st\">&#39;Puffin&#39;<\/span>]<\/span><\/code><\/pre><\/div><p>A dictionary is similar to a list, but you access values by looking up a key instead of an index. A key can be any string or number. Dictionaries are enclosed in curly braces <code>{ }</code>.</p>",


  "✎ Other notes": "<p><strong>Warning:<\/strong> <a href=\"https:\/\/jeffknupp.com\/blog\/2015\/08\/30\/python-dictionaries\">Never search for a value in a dictionary using a for loop<\/a>! The <code>.items()<\/code> method allows you to iterate over both keys and values at the same time. The method returns a view object containing the dictionary\u2019s items as key-value tuples.<\/p>",


  "✎ Markdown": false,


  "Tags": ["__anki-themes-2.7.0::desktop", "__anki-themes-2.7.0::elm", "edit"]
}
