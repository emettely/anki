// Card ========================================================================
// Base `.Card` wrapper styles and it's children elements.
//
// #! HOW MANY LEVELS DEEP SHOULD THE CHILDREN GO?
//    In GPS he says `.gl-` styles shouldn't be nested. But it seems natural to
//    give a design system children, and if they're not obvious HTML elements,
//    such as `<ul><li>` then they'll need a proper class, no?
//
// I'm using a bit of a bastardisation of `ECSS` and `GPS`.
// There doesn't seem to be a silver bullet on how to do it, but it feels quite
// nice having definite wrappers, like `gl-Card` and `gl-Card_Header`, but probably
// not nesting `.gl` classes much deeper than that.
//
// #1: A `p` tag isn't very descriptive, which is where `ECSS` would be explicit.
//     however, the `{{☆ Syntax (inline code)}}` describes things pretty well.
//
// #2: If a `.gl-` class is added, but is empty of CSS, should this class just
//     be discarded? It's _sort of_ important to distinguish the component,
//     but only it's child has styles (perhaps this is perfectly fine and we can
//     use it as a sort of wrapper.
//
//     TLDR: If the `.wrapper` is unstyled, should we remove it and name it's
//           (styled) child element?
//
// #3: Is this named correctly? It's nested inside `.gl-Card` -> `_KeyPoint`
//
// #! Should our `code` styles be here or someplace else?

.gl-Card {
  background: transparent;
  border-radius: var(--border-radius);

  .nightmode & {
    color: var(--color-nightmode-text);  // #! Perhaps should live in RAW HTML
    border: 1px solid var(--color-nightmode-border);
  }
}

.gl-Card_Header {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  text-align: center;
  justify-content: space-evenly;
  align-items: baseline;
  background: var(--color-card-lll);
  border: var(--spacing-px) solid var(--color-card-lll);
  border-bottom: transparent;
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);

  .nightmode & {
    background: var(--color-nightmode-background-ddd);
    border: transparent;
  }
}

.gl-Card_Header h1 {
  flex: 0 0 100%;
  margin: 0 0 var(--spacing-one);
  padding: var(--spacing-half);
  border-bottom: var(--spacing-px) solid var(--color-card-ll);
  background: var(--color-card-llll);

  &:only-child {
    margin-bottom: 0;  // #! I think this is if there's no h2?
  }

  &::before {
    content: '★ ';
  }

  .nightmode & {
    background: var(--color-nightmode-background-dddd);
  }

  // #!
  // Set the appropriate `font-size` for heading code
  // reverses the Goldilocks hack in `print-first-css`:
  //     @ https://tinyurl.com/2p9xpevw
  //
  // code {
  //   font-size: var(--font-size-p);
  // }
}

.gl-Card_Header h2 {
  margin: 0 0 var(--spacing-half);
  padding: var(--spacing-half);
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);

  .nightmode & {
    color: var(--color-nightmode-text-light);
  }
}

// #1
.gl-Card_Header p {
  margin: 0 0 var(--spacing-half) 0;
  padding: var(--spacing-half);
}

// #2
.gl-Card_KeyPoint {
  // Pass
}

// #! #3
.gl-Card_KeyPointNotes {
  margin-bottom: var(--spacing);
  padding: var(--spacing) var(--spacing-one);
  background: var(--color-card-lll);
  font-size: var(--font-size-m);
  text-align: center;

  ul, ol {
    margin-left: var(--spacing-one);
    text-align: left;

    > li {
      margin-left: var(--spacing-one);
    }
  }

  .nightmode & {
    color: var(--color-nightmode-text-light);
    background: var(--color-nightmode-background-d);
  }
}

.gl-Card footer {
  margin-bottom: var(--spacing);
  padding: 0 var(--spacing-one);
  color: var(--color-card-l);
  font-size: var(--font-size-m);  // #! Should this be in `/partials/`?
}


// Code styles -----------------------------------------------------------------
// #! We're being a little more specific here to stop it fucking up our
//    `gl-CodeBlock` styles (which should take precedence). We're NOT currently
//    allowing highlights within the keypoint notes or footer (which might change).

.gl-Card header code {
  b, strong,
  i, em {
    font-size: inherit;
    font-style: inherit;
    font-weight: inherit;
    text-decoration: none;
    // background: none;
  }

  b, strong {
    color: var(--color-code-light-highlight);
  }

  i, em {
    color: var(--color-code-light-lowlight);
  }

  .nightmode & {
    color: var(--color-nightmode-text-dark);
  }
}

.gl-Card_KeyPointNotes code {
  color: var(--color-bbb);
}

.gl-Card_KeyPointNotes pre code {
  text-align: left;
  background: transparent;
}

.gl-Card_KeyPointNotes pre,
.gl-Card_KeyPointNotes pre code {
  .nightmode & {
    background: var(--color-ll);
  }
}
